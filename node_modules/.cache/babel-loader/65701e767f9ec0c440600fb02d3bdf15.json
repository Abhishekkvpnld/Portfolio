{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JISHN\\\\Documents\\\\projects\\\\My Portfolio\\\\my-portfolio\\\\src\\\\components\\\\Projects\\\\Works.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { ProjectsData } from './Data';\nimport { projectNav } from './Data';\nimport WorksItems from './WorksItems';\nfunction Works() {\n  const [item, setItem] = useState({\n    name: 'all'\n  });\n  const [projects, setProjects] = useState([]);\n  const [active, setActive] = useState(0);\n  useEffect(() => {\n    if (item.name === 'all') {\n      setProjects(ProjectsData);\n    } else {\n      const newProjects = ProjectsData.filter(project => {\n        return project.category.toLowerCase() === item.name;\n      });\n      setProjects(newProjects);\n    }\n  }, [item]);\n  const handleClick = (e, index) => {\n    setItem({\n      name: e.target.textContent.toLowerCase()\n    });\n    setActive(index);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"work_filters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, projectNav.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      onClick: e => {\n        handleClick(e, index);\n      },\n      className: `${active === index ? 'active-work' : 'non-active'} btn btn-secondary`,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, item.name);\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"work_container container grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }\n  }, projects.map(item => {\n    return /*#__PURE__*/React.createElement(WorksItems, {\n      item: item,\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 16\n      }\n    });\n  })));\n}\nexport default Works;","map":{"version":3,"names":["React","useEffect","useState","ProjectsData","projectNav","WorksItems","Works","item","setItem","name","projects","setProjects","active","setActive","newProjects","filter","project","category","toLowerCase","handleClick","e","index","target","textContent","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","map","onClick","key","id"],"sources":["C:/Users/JISHN/Documents/projects/My Portfolio/my-portfolio/src/components/Projects/Works.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { ProjectsData } from './Data'\r\nimport { projectNav } from './Data'\r\nimport WorksItems from './WorksItems'\r\n\r\nfunction Works() {\r\n\r\nconst [item,setItem] = useState({name:'all'});\r\nconst [projects ,setProjects] = useState([]);\r\nconst [active , setActive] = useState(0)\r\n\r\nuseEffect(()=>{\r\n    if(item.name === 'all' ){\r\n        setProjects(ProjectsData)\r\n    }else{\r\n        const newProjects =ProjectsData.filter((project)=> {\r\n    return project.category.toLowerCase() === item.name;\r\n        })\r\n        setProjects(newProjects);\r\n    }\r\n},[item])\r\n\r\nconst handleClick = (e,index) => {\r\n    setItem({ name:e.target.textContent.toLowerCase() });\r\n    setActive(index)\r\n}\r\n\r\n  return (\r\n   <div>\r\n    <div className=\"work_filters\">\r\n    {\r\nprojectNav.map((item,index)=>{\r\n    return (\r\n        <span onClick={(e)=>{handleClick(e,index)}} className={`${active === index ? 'active-work' : 'non-active' } btn btn-secondary`} key={index}>{item.name}</span>\r\n    )\r\n})\r\n    }\r\n   </div>\r\n\r\n   <div className=\"work_container container grid\">\r\n    {\r\n    projects.map((item)=>{\r\n        return <WorksItems item={item} key={item.id}/>\r\n    })\r\n    }\r\n   </div>\r\n   </div>\r\n  )\r\n}\r\n\r\nexport default Works"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,YAAY,QAAQ,QAAQ;AACrC,SAASC,UAAU,QAAQ,QAAQ;AACnC,OAAOC,UAAU,MAAM,cAAc;AAErC,SAASC,KAAKA,CAAA,EAAG;EAEjB,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGN,QAAQ,CAAC;IAACO,IAAI,EAAC;EAAK,CAAC,CAAC;EAC7C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,MAAM,EAAGC,SAAS,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAExCD,SAAS,CAAC,MAAI;IACV,IAAGM,IAAI,CAACE,IAAI,KAAK,KAAK,EAAE;MACpBE,WAAW,CAACR,YAAY,CAAC;IAC7B,CAAC,MAAI;MACD,MAAMW,WAAW,GAAEX,YAAY,CAACY,MAAM,CAAEC,OAAO,IAAI;QACvD,OAAOA,OAAO,CAACC,QAAQ,CAACC,WAAW,CAAC,CAAC,KAAKX,IAAI,CAACE,IAAI;MAC/C,CAAC,CAAC;MACFE,WAAW,CAACG,WAAW,CAAC;IAC5B;EACJ,CAAC,EAAC,CAACP,IAAI,CAAC,CAAC;EAET,MAAMY,WAAW,GAAGA,CAACC,CAAC,EAACC,KAAK,KAAK;IAC7Bb,OAAO,CAAC;MAAEC,IAAI,EAACW,CAAC,CAACE,MAAM,CAACC,WAAW,CAACL,WAAW,CAAC;IAAE,CAAC,CAAC;IACpDL,SAAS,CAACQ,KAAK,CAAC;EACpB,CAAC;EAEC,oBACCrB,KAAA,CAAAwB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACC9B,KAAA,CAAAwB,aAAA;IAAKO,SAAS,EAAC,cAAc;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEjC1B,UAAU,CAAC4B,GAAG,CAAC,CAACzB,IAAI,EAACc,KAAK,KAAG;IACzB,oBACIrB,KAAA,CAAAwB,aAAA;MAAMS,OAAO,EAAGb,CAAC,IAAG;QAACD,WAAW,CAACC,CAAC,EAACC,KAAK,CAAC;MAAA,CAAE;MAACU,SAAS,EAAG,GAAEnB,MAAM,KAAKS,KAAK,GAAG,aAAa,GAAG,YAAc,oBAAoB;MAACa,GAAG,EAAEb,KAAM;MAAAI,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAEvB,IAAI,CAACE,IAAW,CAAC;EAEtK,CAAC,CAEO,CAAC,eAENT,KAAA,CAAAwB,aAAA;IAAKO,SAAS,EAAC,+BAA+B;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAE7CpB,QAAQ,CAACsB,GAAG,CAAEzB,IAAI,IAAG;IACjB,oBAAOP,KAAA,CAAAwB,aAAA,CAACnB,UAAU;MAACE,IAAI,EAAEA,IAAK;MAAC2B,GAAG,EAAE3B,IAAI,CAAC4B,EAAG;MAAAV,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAC,CAAC;EAClD,CAAC,CAEG,CACA,CAAC;AAET;AAEA,eAAexB,KAAK"},"metadata":{},"sourceType":"module"}